<UserControl x:Class="PdfFlipBook.Views.Controls.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PdfFlipBook.Views.Controls"
             xmlns:pages="clr-namespace:PdfFlipBook.ViewModel.Pages"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance pages:SettingsPageViewModel}">
    <UserControl.Resources>
        <ControlTemplate x:Key="CancelButton" TargetType="Button">
            <Border Background="Transparent">
                <Image Source="../../Images/Cancel.png" Width="57" />
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="CorrectButton" TargetType="Button">
            <Border Background="Transparent">
                <Image Source="../../Images/Correct.png" Width="57" />
            </Border>
        </ControlTemplate>
        <Style TargetType="Border" x:Key="RadioButtonBorderStyle">
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Padding" Value="32" />
            <Setter Property="Margin" Value="6 0 6 0 " />
            <Setter Property="Width" Value="1591" />
            <Setter Property="Height" Value="162" />
            <Setter Property="Background" Value="#7F7F7F" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}"
                             Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                    To="#E4E4E4" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                    To="#7F7F7F" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="RadioButton" x:Key="SettingsRadioButtonsStyle">
            <Setter Property="Foreground" Value="#808080" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Style="{DynamicResource RadioButtonBorderStyle}"
                                x:Name="BorderRadio">
                            <TextBlock Style="{DynamicResource SettingsButtonText}"
                                       FontSize="80"
                                       Text="{TemplateBinding Tag}"
                                       Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                    To="White" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                    To="#808080" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
        <Border Style="{DynamicResource SettingBorderStyle}"
                Background="White" Opacity="0.4"
                Width="3526"
                Height="1368" >
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDown">
                    <b:InvokeCommandAction Command="{Binding LostFocusCommand}" CommandParameter="Interval" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </Border>
        <StackPanel VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDown">
                    <b:InvokeCommandAction Command="{Binding LostFocusCommand}" CommandParameter="Interval" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <Border Style="{DynamicResource SettingBorderStyle}"
                    Background="White" Height="226">
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Text="Время бездействия"
                        Margin="32"
                        Style="{DynamicResource SettingsTextBlock}" />
                    <TextBox Template="{DynamicResource InactivityTextBox}"
                             Margin="1500 0 0 0" Width="612" Height="162"
                             FontSize="50"
                             Foreground="#808080"
                             Text="{Binding PageSettings.InactivityTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             TextAlignment="Center"
                             Tag="{Binding SettingsModel.InactivityTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="GotFocus">
                                <b:InvokeCommandAction Command="{Binding GotFocusCommand}" CommandParameter="Inactivity" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
            </Border>
            <Border Style="{DynamicResource SettingBorderStyle}"
                    Background="White" Margin="0 128"
                    Height="226">
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Text="Интервал перелистывания страниц"
                        Style="{DynamicResource SettingsTextBlock}"
                        Margin="32" />
                    <TextBox Template="{DynamicResource InactivityTextBox}"
                             Margin="670 0 32 0"
                             Width="612" Height="162"
                             Text="{Binding PageSettings.Interval,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             Tag="{Binding SettingsModel.IntervalSwitchPage, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             Foreground="#808080"
                             FontSize="50" >
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="GotFocus">
                                <b:InvokeCommandAction Command="{Binding GotFocusCommand}" CommandParameter="Interval" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </TextBox>
                </StackPanel>
            </Border>
            <Border Style="{DynamicResource SettingBorderStyle}"
                    Background="White" Height="404">
                <StackPanel>
                    <TextBlock
                        Text="Действие после окончания книги"
                        Style="{DynamicResource SettingsTextBlock}"
                        HorizontalAlignment="Left" Margin="32 32 0 16" />
                    <StackPanel Orientation="Horizontal" Height="186" Background="#E4E4E4" Width="3206"
                                Margin="32 16 32 32">
                        <RadioButton Style="{DynamicResource SettingsRadioButtonsStyle}"
                                     Tag="Начать заново"
                                     IsChecked="{Binding SettingsModel.Repeat,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="GotFocus">
                                    <b:InvokeCommandAction Command="{Binding LostFocusCommand}" CommandParameter="Interval" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </RadioButton>
                        <RadioButton Style="{DynamicResource SettingsRadioButtonsStyle}"
                                     IsChecked="{Binding SettingsModel.NextPage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Tag="Следующая книга">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="GotFocus">
                                    <b:InvokeCommandAction Command="{Binding LostFocusCommand}" CommandParameter="Interval" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </RadioButton> 
                    </StackPanel>
                </StackPanel>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>